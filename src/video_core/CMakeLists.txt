add_library(video_core STATIC
    command_processor.cpp
    command_processor.h
    geometry_pipeline.cpp
    geometry_pipeline.h
    pica.cpp
    pica.h
    pica_state.h
    pica_types.h
    primitive_assembly.cpp
    primitive_assembly.h
    regs.h
    regs_framebuffer.h
    regs_lighting.h
    regs_pipeline.h
    regs_rasterizer.h
    regs_shader.h
    regs_texturing.h
    renderer/rasterizer.cpp
    renderer/rasterizer.h
    renderer/rasterizer_cache.cpp
    renderer/rasterizer_cache.h
    renderer/resource_manager.cpp
    renderer/resource_manager.h
    renderer/shader_decompiler.cpp
    renderer/shader_decompiler.h
    renderer/shader_disk_cache.cpp
    renderer/shader_disk_cache.h
    renderer/shader_gen.cpp
    renderer/shader_gen.h
    renderer/shader_manager.cpp
    renderer/shader_manager.h
    renderer/shader_util.cpp
    renderer/shader_util.h
    renderer/state.cpp
    renderer/state.h
    renderer/stream_buffer.cpp
    renderer/stream_buffer.h
    renderer/surface_params.cpp
    renderer/surface_params.h
    renderer/pica_to_gl.h
    renderer/post_processing.cpp
    renderer/post_processing.h
    renderer/renderer.cpp
    renderer/renderer.h
    renderer/texture_filters/anime4k_ultrafast.cpp
    renderer/texture_filters/anime4k_ultrafast.h
    renderer/texture_filters/bicubic.cpp
    renderer/texture_filters/bicubic.h
    renderer/texture_filters/scale_force.cpp
    renderer/texture_filters/scale_force.h
    renderer/texture_filters/texture_filter_base.h
    renderer/texture_filters/texture_filterer.cpp
    renderer/texture_filters/texture_filterer.h
    renderer/texture_filters/xbrz_freescale.cpp
    renderer/texture_filters/xbrz_freescale.h
    renderer/texture_filters/tex_coord.h
    renderer/format_reinterpreter.cpp
    renderer/format_reinterpreter.h
    shader/shader.cpp
    shader/shader.h
    shader/engine.cpp
    shader/engine.h
    shader/compiler.cpp
    shader/compiler.h
    texture/etc1.cpp
    texture/etc1.h
    texture/texture_decode.cpp
    texture/texture_decode.h
    utils.h
    vertex_loader.cpp
    vertex_loader.h
    video_core.cpp
    video_core.h
)

create_target_directory_groups(video_core)

target_link_libraries(video_core PUBLIC common core xbyak)
target_link_libraries(video_core PRIVATE stb glad nihstro-headers)
