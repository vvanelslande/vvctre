name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - os: windows-2019
            with_cubeb: false
            name: windows-7-and-8
          - os: windows-2019
            with_cubeb: true
            name: windows-8.1-and-later
          - os: ubuntu-18.04
            with_cubeb: true
            name: linux
    steps:
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-18.04'
        run: |
          for apt_file in `grep -lr microsoft /etc/apt/sources.list.d/`; do sudo rm $apt_file; done
          sudo apt-get update
          sudo apt-get install --yes libsdl2-dev libpng-dev
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Configure CMake (without cubeb)
        if: matrix.with_cubeb == false
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DENABLE_CUBEB=OFF
      - name: Configure CMake (with cubeb)
        shell: bash
        if: matrix.with_cubeb == true
        run: |
          cd $GITHUB_WORKSPACE
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release
      - name: Build
        working-directory: ./build
        shell: bash
        run: cmake --build . --config Release
      - name: Prepare to upload artifact
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE
          cp license.txt ./build/bin/Release
          if [ "$RUNNER_OS" == "Windows" ]; then
            rm ./build/bin/Release/*.pdb
          fi
      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: ${{matrix.name}}
          path: build/bin/Release
